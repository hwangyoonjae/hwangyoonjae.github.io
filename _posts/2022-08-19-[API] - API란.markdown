---
title: "[API] - API란"
layout: post
date: 2022-08-19
image: /assets/images/Post/api.png
headerImage: true
tag:
- Markdown
- Log
category: blog
author: hwangyoonjae
description: Markdown summary with different options
---

## API란?:
- Application Programing Interface에 약자로, 응용 프로그램에서 사용할 수 있도록 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스다.

<span style="color:#FA5858; font-size:12px">※ 인터페이스란? : 서로 다른 두 개의 시스템, 장치 사이에서 정보나 신호를 주고받는 경우의 접점이나 경계면이다.</span>

* * *

### API 흐름도:
- API를 음식점에 점원으로 비유한다면 점원은 손님에게 메뉴를 알려주고 주방에 주문받은 요리를 요청한다음 주방에서 완성된 요리를 손님께 다시 전달하는 역할을 한다. <br>
즉, API는 손님(프로그램)이 주문할 수 있게 메뉴(명령 목록)를 정리하고, 주문(명령)을 받으면 요리사(응용프로그램)와 상호작용하여 요청된 메뉴(명령에 대한 값)를 전달한다.

[![텍스트](/assets/images/API/API%20%EC%97%AD%ED%95%A0.PNG)](/assets/images/API/API%20%EC%97%AD%ED%95%A0.PNG)

* * *

### API 접근방식:
- API의 접근 방식에는 크게 세가지가 존재한다.
  - Private API : API를 기업이나 연구 단체 등에서 사용하는 다양한 애플리케이션과 시스템의 통합을 위해 사용하는 것으로 단체 내부에서만 사용할 수 있도록 한다.
  - Partner API : API를 특정 비즈니스 파트너와 공유하는 것으로, 공유받은 API를 품질 저하 없이 사용할 수 있으며 수익 창출을 목표로 사용한다.
  - Public API (openAPI) : 모든 사람들에게 API를 제공하는 것으로, 개인이 API와 상호작용하는 프로그램을 무료로 개발할 수 있다. <br>다양한 아이디어를 통해 혁신적인 프로그램의 등장을 목표로 사용된다.

* * *

### API 장점:
1. HTTP 프로토콜의 인프라를 그대로 사용하므로 REST API 사용을 위한 별도의 인프라를 구출할 필요가 없다.
2. HTTP 프로토콜의 표준을 최대한 활용하여 여러 추가적인 장점을 함께 가져갈 수 있게 해준다.
3. HTTP 표준 프로토콜에 따르는 모든 플랫폼에서 사용이 가능하다.
4. REST API 메시지가 의도하는 바를 명확하게 나타내므로 의도하는 바를 쉽게 파악 할 수 있다
5. 여러가지 서비스 디자인에서 생길 수 있는 문제를 최소화한다.
6. 서버와 클라이언트의 역할을 명확하게 분리한다.

* * *

### API 단점:
1. 표준이 존재하지 않는다.
2. 사용할 수 있는 메소드가 4가지 밖에 없다.
3. HTTP Method 형태가 제한적이다.
4. 브라우저를 통해 테스트할 일이 많은 서비스라면 쉽게 고칠 수 있는 URL 보다 Header값이 왠지 더 어렵게 느껴진다.
5. 구형 브라우저가 아직 제대로 지원해주지 못하는 부분이 존재한다.
6. PUT, DELETE를 사용하지 못한다.
* * *
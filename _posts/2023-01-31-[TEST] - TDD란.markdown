---
title: "[TEST] - TDD란"
layout: post
date: 2023-01-31
image: /assets/images/Post/repeat.png
headerImage: true
tag:
- 테스트
category: blog
author: hwangyoonjae
description: Markdown summary with different options
---

## TDD를 알고싶었던 계기:
- IAC를 공부하는 과정에서 우연히 TDD라는 단어를 보게되어 검색하였더니 개발소스 테스트 관련된 사항이라 알아야할 거 같아 작성하게되었다.

* * *

## Test Driven Development(TDD)란?:
- 테스트 주도 개발이라 한다.
- 반복 테스트를 이용한 소프트웨어 방법론으로, 작은 단위의 테스트 케이스를 작성하고 이를 통과하는 코드를 추가하는 단계를 반복하여 구현한다.

* * *

## TDD 개발주기:
[![텍스트](/assets/images/TEST/TDD%20%EA%B0%9C%EB%B0%9C%EC%A3%BC%EA%B8%B0.PNG)](/assets/images/TEST/TDD%20%EA%B0%9C%EB%B0%9C%EC%A3%BC%EA%B8%B0.PNG)

- <span style="color:#FE2E2E">실패[RED]</span> : 문제 정의 단계로, 실패하는 테스트 코드를 실제 코드보다 먼저 작성한다.
- <span style="color:#04B431">성공[GREEN]</span> : 문제 해결 단계로, 테스트를 성공할 수 있는 최소한의 실제코드를 작성한다.
- <span style="color:#5882FA">리팩토링[BLUE]</span>: 불필요하고 비효율 적인 코드를 개선한다.

**※ 위와 같은 방법으로 실제코드에 대해 기대되는 바를 보다 명확하게 정의함으로써 불필요한 설계를 피할 수 있고, 정확한 요구 사항에 집중 가능하다.**

* * *

## TDD의 효과:
- 디버깅 시간을 단출 할 수 있다.
  - <span style="color:#01DFA5">자동화 된 유닛테스팅</span>을 전재하므로 <span style="color:#01DFA5">특정 버그</span>를 손쉽게 찾을 수 있다. 
- 코드가 내손을 벗어나기 전에 가장 빠르게 피드백을 받을 수 있다.
  - 기능 단위로 테스트를 진행하기 때문에 코드가 모두 완성되어 <span style="color:#01DFA5">프로그래머의 손을 떠나기 전에 피드백</span>을 받을 수 있다.
- 작성한 코드가 가지는 불안정성을 개선하여 생산성을 높일 수 있다.
  - 사용자에게 도달하기 전에 <span style="color:#01DFA5">문제가 없는지 먼저 진단</span> 받을 수 있다.
- 재설계 시간을 단축 할 수 있다.
  - 개발자가 지금 무엇을 해야하는지 <span style="color:#01DFA5">분명히 정의하고 개발을 시작</span>하게 되고, 테스트 시나리오를 작성하면서 <span style="color:#01DFA5">다양한 예외사항에 대해 생각</span>해볼 수 있다.
- 추가 구현이 용이하다.
  - 자동화된 유닛 테스팅을 전제하므로 <span style="color:#01DFA5">테스트 기간을 획기적으로 단축</span>시킬 수 있다.

* * *